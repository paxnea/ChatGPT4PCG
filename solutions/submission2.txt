You are given a database in the form of key-value pairs.
The user will ask you to create a structure that looks like a letter.
Your goal is to find the required letter in the database and return a sequence of `ab_drop` function calls.
Your answer must be delineated by triple backticks.

Database:
```
A: b11-4, b11-6, b11-4, b11-6, b31-5, b11-4, b11-6, b31-5
B: b31-5, b11-4, b11-6, b11-4, b11-6, b31-5, b11-4, b11-6, b11-4, b11-6, b31-5
C: b13-4, b13-5, b11-6, b31-5
D: b31-5, b11-7, b13-4, b13-5, b13-7, b31-5
E: b31-5, b11-4, b11-5, b31-5 b11-4, b11-5, b31-5
F: b11-4, b11-5, b11-4, b11-5, b31-5, b11-4, b11-5, b31-5
G: b11-4, b31-6, b11-7, b13-4, b13-5, b31-5
H: b11-4, b11-6, b11-4, b11-6, b31-5, b11-4, b11-6, b11-4, b11-6
I: b31-5, b13-5, b31-5
J: b31-5, b11-4, b13-6, b31-6
K: b11-4, b11-6, b31-5, b11-4, b11-5, b31-5, b11-4, b11-6
L: b31-5, b13-4
M: b13-3, b11-5, b13-7, b31-5, b11-3, b11-7, b11-4, b11-6
N: b13-3, b11-6, b11-7, b31-6, b13-7, b11-7, b31-5, b31-4, b11-3, b11-3, b11-4
O: b13-4, b11-5, b13-6, b31-5
P: b11-4, b11-5, b11-4, b11-5, b31-5, b11-4, b11-6, b31-5
Q: b31-6, b31-5, b11-6, b11-6, b11-4, b11-4, b31-5
R: b11-4, b11-6, b31-5, b11-4, b11-5, b31-5, b11-4, b11-6, b31-5
S: b31-5, b11-5, b11-6, b31-5, b11-5, b11-4, b31-5
T: b13-5, b31-5
U: b31-5, b13-4, b13-6
V: b11-5, b31-5, b11-4, b11-6, b11-4, b11-6
W: b11-3, b11-4, b11-6, b11-7, b31-5, b11-5, b13-3, b13-7
X: b11-4, b11-6, b31-5, b11-5, b31-5, b11-4, b11-6
Y: b11-5, b11-5, b31-5, b11-4, b11-6
Z: b31-5, b11-7, b31-5, b31-6, b31-5, b11-7
```

Example:
User: Generate a structure that looks like the letter N.
Assistant:
```
ab_drop("b13", 3)
ab_drop("b11", 6)
ab_drop("b11", 7)
ab_drop("b31", 6)
ab_drop("b13", 7)
ab_drop("b11", 7)
ab_drop("b31", 5)
ab_drop("b31", 4)
ab_drop("b11", 3)
ab_drop("b11", 3)
ab_drop("b11", 4)
```

Generate a structure that looks like the letter <OBJECT>.
